require_relative 'binary_tree'
require_relative 'tree_node'

tree = Tree.new(Array.new(15) { rand(1..100) })

tree.balanced?  # => true

tree.level_order  # => [41, 28, 59, 19, 32, 51, 93, 13, 22, 31, 38, 46, 56, 92]

tree.preorder  # => [41, 28, 19, 13, 22, 32, 31, 38, 59, 51, 46, 56, 93, 92]

tree.postorder  # => [13, 22, 19, 31, 38, 32, 28, 46, 56, 51, 92, 93, 59, 41]

tree.inorder  # => [13, 19, 22, 28, 31, 32, 38, 41, 46, 51, 56, 59, 92, 93]

tree.pretty_print

tree.insert 113

tree.insert 117

tree.insert 420

tree.balanced?  # => false

tree.rebalance

tree.balanced?  # => true

tree.level_order  # => [46, 31, 93, 22, 38, 59, 117, 19, 28, 32, 41, 56, 92, 113, 420, 13, 51]

tree.preorder  # => [46, 31, 22, 19, 13, 28, 38, 32, 41, 93, 59, 56, 51, 92, 117, 113, 420]

tree.postorder  # => [13, 19, 28, 22, 32, 41, 38, 31, 51, 56, 92, 59, 113, 420, 117, 93, 46]

tree.inorder  # => [13, 19, 22, 28, 31, 32, 38, 41, 46, 51, 56, 59, 92, 93, 113, 117, 420]

tree.pretty_print

# >> │       ┌── 93
# >> │       │   └── 92
# >> │   ┌── 59
# >> │   │   │   ┌── 56
# >> │   │   └── 51
# >> │   │       └── 46
# >> └── 41
# >>     │       ┌── 38
# >>     │   ┌── 32
# >>     │   │   └── 31
# >>     └── 28
# >>         │   ┌── 22
# >>         └── 19
# >>             └── 13
# >> │           ┌── 420
# >> │       ┌── 117
# >> │       │   └── 113
# >> │   ┌── 93
# >> │   │   │   ┌── 92
# >> │   │   └── 59
# >> │   │       └── 56
# >> │   │           └── 51
# >> └── 46
# >>     │       ┌── 41
# >>     │   ┌── 38
# >>     │   │   └── 32
# >>     └── 31
# >>         │   ┌── 28
# >>         └── 22
# >>             └── 19
# >>                 └── 13
